<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cuber.base.repo.mapper.CurrencyDOMapper">
  <resultMap id="BaseResultMap" type="org.cuber.base.repo.model.CurrencyDO">
    <id column="currency_id" jdbcType="INTEGER" property="currencyId" />
    <result column="alpha_code" jdbcType="VARCHAR" property="alphaCode" />
    <result column="number_code" jdbcType="VARCHAR" property="numberCode" />
    <result column="minor_unit" jdbcType="INTEGER" property="minorUnit" />
    <result column="symbol_currency" jdbcType="VARCHAR" property="symbolCurrency" />
    <result column="locale_message" jdbcType="VARCHAR" property="localeMessage" />
    <result column="zh_cn_name" jdbcType="VARCHAR" property="zhCnName" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    currency_id, alpha_code, number_code, minor_unit, symbol_currency, locale_message, 
    zh_cn_name, status, operator, update_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_base_currency
    where currency_id = #{currencyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_base_currency
    where currency_id = #{currencyId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.cuber.base.repo.model.CurrencyDO">
    insert into t_base_currency (currency_id, alpha_code, number_code, 
      minor_unit, symbol_currency, locale_message, 
      zh_cn_name, status, operator, 
      update_time, create_time)
    values (#{currencyId,jdbcType=INTEGER}, #{alphaCode,jdbcType=VARCHAR}, #{numberCode,jdbcType=VARCHAR}, 
      #{minorUnit,jdbcType=INTEGER}, #{symbolCurrency,jdbcType=VARCHAR}, #{localeMessage,jdbcType=VARCHAR}, 
      #{zhCnName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.cuber.base.repo.model.CurrencyDO">
    insert into t_base_currency
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="currencyId != null">
        currency_id,
      </if>
      <if test="alphaCode != null">
        alpha_code,
      </if>
      <if test="numberCode != null">
        number_code,
      </if>
      <if test="minorUnit != null">
        minor_unit,
      </if>
      <if test="symbolCurrency != null">
        symbol_currency,
      </if>
      <if test="localeMessage != null">
        locale_message,
      </if>
      <if test="zhCnName != null">
        zh_cn_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="currencyId != null">
        #{currencyId,jdbcType=INTEGER},
      </if>
      <if test="alphaCode != null">
        #{alphaCode,jdbcType=VARCHAR},
      </if>
      <if test="numberCode != null">
        #{numberCode,jdbcType=VARCHAR},
      </if>
      <if test="minorUnit != null">
        #{minorUnit,jdbcType=INTEGER},
      </if>
      <if test="symbolCurrency != null">
        #{symbolCurrency,jdbcType=VARCHAR},
      </if>
      <if test="localeMessage != null">
        #{localeMessage,jdbcType=VARCHAR},
      </if>
      <if test="zhCnName != null">
        #{zhCnName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cuber.base.repo.model.CurrencyDO">
    update t_base_currency
    <set>
      <if test="alphaCode != null">
        alpha_code = #{alphaCode,jdbcType=VARCHAR},
      </if>
      <if test="numberCode != null">
        number_code = #{numberCode,jdbcType=VARCHAR},
      </if>
      <if test="minorUnit != null">
        minor_unit = #{minorUnit,jdbcType=INTEGER},
      </if>
      <if test="symbolCurrency != null">
        symbol_currency = #{symbolCurrency,jdbcType=VARCHAR},
      </if>
      <if test="localeMessage != null">
        locale_message = #{localeMessage,jdbcType=VARCHAR},
      </if>
      <if test="zhCnName != null">
        zh_cn_name = #{zhCnName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where currency_id = #{currencyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cuber.base.repo.model.CurrencyDO">
    update t_base_currency
    set alpha_code = #{alphaCode,jdbcType=VARCHAR},
      number_code = #{numberCode,jdbcType=VARCHAR},
      minor_unit = #{minorUnit,jdbcType=INTEGER},
      symbol_currency = #{symbolCurrency,jdbcType=VARCHAR},
      locale_message = #{localeMessage,jdbcType=VARCHAR},
      zh_cn_name = #{zhCnName,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where currency_id = #{currencyId,jdbcType=INTEGER}
  </update>
</mapper>